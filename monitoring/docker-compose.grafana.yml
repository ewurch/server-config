version: '3.8'

services:
  prometheus:
    image: prom/prometheus
    env_file:
      - ../.env
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.prometheus-https.rule=Host(`prometheus.${DOMAIN}`)
        - traefik.http.routers.prometheus-https.entrypoints=https
        - traefik.http.routers.prometheus-https.tls=true
        - traefik.http.routers.prometheus-https.tls.certresolver=le
        - traefik.http.routers.prometheus-https.middlewares=admin-auth
        - traefik.http.services.prometheus-https.loadbalancer.server.port=9090
        
  grafana:
    image: grafana/grafana
    env_file:
      - ../.env
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "true"
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.grafana-https.rule=Host(`grafana.${DOMAIN}`)
        - traefik.http.routers.grafana-https.entrypoints=https
        - traefik.http.routers.grafana-https.tls=true
        - traefik.http.routers.grafana-https.tls.certresolver=le
        - traefik.http.routers.grafana-https.middlewares=admin-auth
        - traefik.http.services.grafana-https.loadbalancer.server.port=3000

volumes:
  prometheus_data:
  grafana_data:

networks:
  traefik-public:
    external: true
